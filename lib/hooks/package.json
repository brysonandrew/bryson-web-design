{
  "name": "@brysonandrew/hooks",
  "version": "7.0.79",
  "description": "Hooks library",
  "main": "./index.ts",
  "module": "./index.ts",
  "scripts": {
    "format": "prettier .",
    "lint": "tsc --build . & eslint . --fix --ext ts,tsx",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Andrew Bryson <andrewbryson12@gmail.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/brysonandrew/brysona.dev.git"
  },
  "sideEffects": false,
  "keywords": [
    "react",
    "typescript"
  ],
  "peerDependencies": {
    "@brysonandrew/hooks-events": "*",
    "@brysonandrew/hooks-dom": "*",
    "@brysonandrew/hooks-life-cycle": "*",
    "@brysonandrew/hooks-scroll": "*",
    "@brysonandrew/hooks-window": "*",
    "@brysonandrew/utils-function": "7.0.79",
    "react": "^18.2.0"
  },
  "exports": {
    ".": {
      "require": "./index.ts",
      "import": "./index.ts",
      "default": "./index.ts"
    },
    "./network/useIpWebRtc": "./network/useIpWebRtc.ts",
    "./events/useEventCallback": "./events/useEventCallback.ts",
    "./events/useEventListener": "./events/useEventListener.ts",
    "./events/useHover": "./events/useHover.ts",
    "./events/useLongPress": "./events/useLongPress.ts",
    "./dom/useDomCondition": "./dom/useDomCondition.ts",
    "./dom/useHoverKeyAlt": "./dom/useHoverKeyAlt.ts",
    "./dom/useKey": "./dom/useKey.ts",
    "./dom/useLocalStorage": "./dom/useLocalStorage.ts",
    "./dom/useOutsideClick": "./dom/useOutsideClick.ts",
    "./dom/useRect": "./dom/useRect.ts",
    "./dom/useRefState": "./dom/useRefState.ts",
    "./life-cycle/useIsFirstRender": "./life-cycle/useIsFirstRender.ts",
    "./life-cycle/useIsomorphicLayoutEffect": "./life-cycle/useIsomorphicLayoutEffect.ts",
    "./life-cycle/useUpdateEffect": "./life-cycle/useUpdateEffect.ts",
    "./scroll/useFreezeScroll": "./scroll/useFreezeScroll.ts",
    "./window/use-time-bomb": "./window/use-time-bomb.ts",
    "./window/useDelay": "./window/useDelay.ts",
    "./window/useDelayCallback": "./window/useDelayCallback.ts",
    "./window/useDelayCallbackHandler": "./window/useDelayCallbackHandler.ts",
    "./window/useInterval": "./window/useInterval.tsx",
    "./window/useMediaQuery": "./window/useMediaQuery.ts",
    "./window/useNoPointer": "./window/useNoPointer.ts",
    "./window/useTimeoutRef": "./window/useTimeoutRef.ts"
  }
}